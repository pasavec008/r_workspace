data
data
View(data)
data <- nycflights13:flights
data <- nycflights13:flights
install.packages(nycflights13)
install.package(nycflights13)
install.packages("nycflights13")
data <- nycflights13:flights
x <- 5
x
# Uvod do R, uzitocne prikazy
getwd()
setwd()
currentd()
# Uvod do R, uzitocne prikazy
getwd()
setwd('C:\R\workspace')
setwd('C:/R/workspace')
# Uvod do R, uzitocne prikazy
getwd()
dir()
list.files()
2**3
2-3
2+3
2*3
2/3
abs(-5)
pi
exp(1)
log(10)
log(exp(1))
log(100, 10)
a <- inf
a <- Inf
a <- 5/0
a
factorial(6)
factorial(350)
factorial(56)
factorial(100)
factorial(127)
choose(6, 2)
log(0)
choose(6, 2)
choose(6, 2)
b <- 5
class(b)
b <- int(5)
b <- 5
is.integer(5)
class(bL)
b <- 5L
class(b)
is.integer(5)
is.integer(b)
b
is.integer(27L)
# komplexne cisla
d <- 2+3i
class(d)
abs(d)
d
class(abs(d))
4<5
!(4<5)
3 != 5
# textove
f <- 'ahoj nazdar cau'
f
# vektory a matice
v1 <- c(4, 8, 'cauko')
# vektory a matice
v1 <- c(4, 8, 7)
v2 <- c(6, 7, 9)
v1 * v2
v1 / v2
v1 * c(2, 3)
length(v1)
sum(v1)
prod(v1)
cumsum(v1)
# postupnost cisel
1:7
# postupnost cisel
1:7:2
v4 <- seq(1, 26, 2)
v5 <- seq(1, 20, length=30)
v5
v6 <- rep(v1, times=4)
v6
# prvky vektora
v6
# prvky vektora
v6[5]
v6[4:7]
# prvky vektora
v7 <- 1:20
v7[5]
v7[4:7]
# vymazanie objektov
rm(v7)
rm()
matrix(v1, v2)
matrix(v1, 7, 3)
# matice
v1 <- 1:21
matrix(v1, 7, 3)
matrix(v1, 7, 3, byrow=T)
students <- data.frame(name, age)
############################################
# datove tabulky a zoznamy
# vytorime databazu studentov s tymito stlpcami - meno, vek, studium, pocet bodov z pisomky
name <- c('Jan', 'Ivo', 'Oto', 'Eva', 'Ida')
age <- c(19, 20, 21, 22, 22, 18)
students <- data.frame(name, age)
age <- c(19, 20, 21, 22, 18)
students <- data.frame(name, age)
students
class(name)
students$gender <- c('man', 'man', 'man', 'woman', 'helicopter')
students
students$gender <- c('man', 'helicopter', 'man', 'woman', 'woman☕')
students
students$gender <- c('man', 'helicopter', 'man', 'woman☕'', 'woman☕')
students$gender <- c('man', 'helicopter', 'man', 'woman☕'', 'woman☕')
students$gender <- c('man', 'helicopter', 'man', 'woman☕'' 'woman☕')
students$gender <- c('man', 'helicopter', 'man', 'woman☕' 'woman☕')
students
students$gender <- c('man', 'helicopter', 'man', 'woman☕' ,'woman☕')
students
students
students$points <- c(5, 9, 7, 1, 6, 7)
students$points <- c(5, 9, 7, 1, 6)
students$studium <- factor(c(1, 0, 1, 0, 1), labels=c('it', 'ib'))
students
students$home <- factor(c(1, 2, 3, 1, 2), labels=c('house', 'internat', 'homeless'))
students
women <- subset(students, students$gender='woman☕')
women <- subset(students, students$gender=='woman☕')
women
points <- subset(students, students$points > 5)
points
#kolacovy graf
pie(table(student$gender))
#kolacovy graf
pie(table(students$gender))
students$gender <- c('man', 'man', 'man', 'woman☕' ,'woman☕')
students$points <- c(5, 9, 7, 1, 6)
students$studium <- factor(c(1, 0, 1, 0, 1), labels=c('it', 'ib'))
students$home <- factor(c(1, 2, 3, 1, 2), labels=c('house', 'internat', 'homeless'))
women <- subset(students, students$gender=='woman☕')
women
points <- subset(students, students$points > 5)
points
#kolacovy graf
pie(table(students$gender))
students$home <- factor(c(1, 2, 1, 1, 2), labels=c('h', 'i'))
women <- subset(students, students$gender=='woman☕')
women
points <- subset(students, students$points > 5)
points
#kolacovy graf
pie(table(students$gender))
pie(table(students$home))
#rozdelenie graf. okna na 2
par(mfrom=c(1, 2))
#rozdelenie graf. okna na 2
par(nfrom=c(1, 2))
barplot(table(students$gender))
barplot(table(students$home))
barplot(table(students$points))
students$home <- factor(c(1, 2, 3, 1, 2), labels=c('h', 'k', 'i'))
women <- subset(students, students$gender=='woman☕')
women
points <- subset(students, students$points > 5)
points
#kolacovy graf
pie(table(students$gender))
pie(table(students$home))
#rozdelenie graf. okna na 2
par(nfrom=c(1, 2))
barplot(table(students$gender))
barplot(table(students$home))
#rozdelenie graf. okna na 2
par(mfrom=c(1, 2))
# kreslenie funkcii
plot(cos, from=2*pi, to=2*pi)
# kreslenie funkcii
plot(cos, from=-2*pi, to=2*pi)
#vykreslit len v bodoch
xx <- seq(from=-2*pi, to=2*pi, length=30)
xx
plot(xx)
plot(xx, cos(xx))
#vykreslit len v bodoch
xx <- seq(from=-2*pi, to=2*pi, length=300)
plot(xx, cos(xx))
#vykreslit len v bodoch
xx <- seq(from=-2*pi, to=2*pi, length=75)
plot(xx, cos(xx))
#vykreslit len v bodoch
xx <- seq(from=-2*pi, to=2*pi, length=50)
plot(xx, cos(xx))
#nacitanie dat
dataset <- read.csv('diabetes.csv')
dataset
dataset
View(dataset)
subset(dataset, dataset$BMI > 35 & dataset$BloodPressure > 90)
count(subset(dataset, dataset$BMI > 35 & dataset$BloodPressure > 90))
subset(dataset, dataset$BMI > 35 & dataset$BloodPressure > 90)
x <- subset(dataset, dataset$BMI > 35 & dataset$BloodPressure > 90)
x
# nainstalovanie packageov
install.packages('readxl')
# nainstalovanie packageov
install.packages('readxl')
library('readxl')
data <- read_excel('data_cviko.xlsx')
View(data)
View(subset(data, data$vzdelanie == 3))
#' datovy subor dataE obsahuje, okrem ineho, data mesacny prijem a
#' informaciu o vzdelani respondenta (triedny faktor-vzdelanie, tri urovne).
#' Na hladine vyznamnosti $\alpha = 0.05$ testujte hypotezu, ze faktor
#' vzdelanie je nulovy a teda nema vplyv na vysku prijmu
data <- read_xlsx('data\\dataE.xlsx')
#' - neparove pre nezavisle merania
#' Testujeme hypotezu o rovnosti strednych hodnot, testy
#' treba vybrat podla toho, ci sa disperzie rovnaju alebo nerovnaju.
#' - test, ak disperzie sa rovnaju
#' - test, ak sa disperzie nerovnaju
#' Priklad 1
#' Dva druhy plastov (plastove okna) sme vystavili slnecnemu ziareniu
#' po dobu pol roka. Vysledky (odolnosti voci ziareniu v dnoch) sme
#' zaznamenali. Na hladine vyznamnosti $\alpha=0.05$. Testujte hypotezu o
#' rovnakej odolnosti voci slnecnemu ziareniu.
dir()
source("C:/R/r_workspace/statistika/cv9.R", echo=TRUE)
X1 <- 1:100
x1
X1 <- 1:100
X1 <- 1:100
X1 <- 1:100
x1
p <- 1:5
p
x1 <- 1:100
x1
x1 <- 1:100
y1 <- sin(x1) + rnorm(100, 0, 0.05)
x1 <- 1:100
y1 <- sin(x1) + rnorm(100, 0, 0.05)
plot(x1, y1, main='Sin(x)', type = 'b')
korelacie(x1, y1)
pre viacrozmerny vektor
#'# Korelacna analyza pre viacrozmerny vektor
#'Castejsie mame viacrozmerne merania, vtedy ratame korelacne koeficienty
#'vzdy medzi dvomi zlozkami, zapisujeme do matice, ktora sa nazyva korelacna
#'matica. Symetricka matica, na diagonale su jednotky. Vyukovy dataset
#'mtcars, carData, car
library(carData)
library(car)
head(mtcars)
view(cor(mtcars))
View(cor(mtcars))
#' lepsie je to aj vizualizovat, kniznica corrplot
library(corrplot)
km <- cor(mtcars)
corrplot(km)
corrplot.mixed(km)
corrplot.mixed(km, plotCI = 'square')
corrplot.mixed(km)
#' Testovat korelacne koeficienty mozno aj naraz Hmisc
library(Hmisc)
rcorr(as.matrix(mtcars))
#' Este jedna vhodna kniznica
library(correlation)
install.packages('correlation')
#' Este jedna vhodna kniznica
library(correlation)
correlation(data1)
m umoznia zistit strukturu dat, zavislosti v datach
#' Grafy, ktore nam umoznia zistit strukturu dat, zavislosti v datach
#' Nase data dataE
library(readxl)
data <- read_xlsx('dataE.xlsx')
head(data)
pairs(data[,c('vek', 'mprij', 'mstrava')])
korelacie(data$mprij, data$mstrava)
pairs(data[,c('vek', 'mprij', 'mstrava')], col='orange')
library(GGally)
install.packages('GGally')
library(GGally)
ggpairs(data[,c('vek', 'mprij', 'mstrava')])
#' toto boli graficke analyzy pre cely datovy subor
#' Mozeme analyzovat aj podmnoziny datoveho suboru
ggpairs(data[,c('vek', 'mprij', 'mstrava')], aes(colour=pohlavie))
#' toto boli graficke analyzy pre cely datovy subor
#' Mozeme analyzovat aj podmnoziny datoveho suboru
ggpairs(data[,c('pohlavie', 'vek', 'mprij', 'mstrava')], aes(colour=pohlavie))
#' toto boli graficke analyzy pre cely datovy subor
#' Mozeme analyzovat aj podmnoziny datoveho suboru
ggpairs(data[,c('pohlavie', 'vek', 'mprij', 'mstrava')], aes(colour=pohlavie), alpha= 0.5)
#' toto boli graficke analyzy pre cely datovy subor
#' Mozeme analyzovat aj podmnoziny datoveho suboru
ggpairs(data[,c('pohlavie', 'vek', 'mprij', 'mstrava')], aes(colour=pohlavie), alfa= 0.5)
#' toto boli graficke analyzy pre cely datovy subor
#' Mozeme analyzovat aj podmnoziny datoveho suboru
ggpairs(data[,c('pohlavie', 'vek', 'mprij', 'mstrava')], aes(colour=pohlavie, alpha = 0.5))
#' toto boli graficke analyzy pre cely datovy subor
#' Mozeme analyzovat aj podmnoziny datoveho suboru
ggpairs(data[,c('pohlavie', 'vek', 'mprij', 'mstrava')], aes(colour=pohlavie, alpha = 0.3))
#'Ked korelacne koeficienty su vysoke, teda data su linearne zavisle, tak
#'nasleduje regresna analyza. Snazime sa zavislost popisat vhodnou
#'funkciou - regresna funkcia, priklad zo zaciatku, prelozime priamku y=a+bx
#'# Regresna analyza
#'Ked korelacne koeficienty su vysoke, teda data su linearne zavisle, tak
#'nasleduje regresna analyza. Snazime sa zavislost popisat vhodnou
#'funkciou - regresna funkcia, priklad zo zaciatku, prelozime priamku y=a+bx
plot(x, y, type = 'b')
lr1 <- lm(y~x)
lr1
summary(lr)
summary(lr1)
#' Multiple R-squared -> cim blizsie k 1, tym lepsi model -> 98% dat je
#' vysvetlenych nasou priamkou
abline(lr1, col = 'red')
#' Ak konstantu neuvazujeme
lr2 <- lm(y~0+x)
summary(lr2)
abline(lr2, col = 'green')
#' prelozime kvadraticku funckiu
lr3 <- lm(y~poly(x, 2))
abline(lr3, col = 'blue')
summary(lr3)
lines(x, lr3, col = 'blue')
lines(x, fitted(lr3), col = 'blue')
log(100, 10)
log10(100)
a <- Inf
a
factorial(6)
choose(6, 2)
choose(6, 2)
choose(6, 2)
choose(6, 2)
help(choose)
b <- 5L
class(b)
kk <- 5
kk
class(kk)
is.integer(27L)
# komplexne cisla
d <- 2+3i
class(d)
class(abs(d))
d
# logicke
!(4 < 5)
3 != 5
# textove
f <- 'ahoj nazdar cau'
f
# vektory a matice
v1 <- c(4, 8, 7)
v2 <- c(6, 7, 9)
v1 * v2
v1 / v2
v1 * c(2, 3)
length(v1)
sum(v1)
prod(v1)
prod(v1)
v1
cumsum(v1)
# postupnost cisel
v3 <- 1:7
v3
v4 <- seq(1, 26, 2)
v4
v5 <- seq(1, 20, length=30)
v5
# z vektora opakovanim prvkov
v6 <- rep(v1, times=4)
v6
# prvky vektora
v7 <- 1:20
v7[5]
v7[4:7]
# vymazanie objektov
rm(v7)
# matice
v1 <- 1:21
matrix(v1, 7, 3)
matrix(v1, 7, 3, byrow=T)
############################################
# datove tabulky a zoznamy
# vytorime databazu studentov s tymito stlpcami - meno, vek, studium, pocet bodov z pisomky
name <- c('Jan', 'Ivo', 'Oto', 'Eva', 'Ida')
age <- c(19, 20, 21, 22, 18)
students <- data.frame(name, age)
students
students <- data.frame(name, age)
students
students$gender <- c('man', 'man', 'man', 'woman☕' ,'woman☕')
students$points <- c(5, 9, 7, 1, 6)
students$studium <- factor(c(1, 0, 1, 0, 1), labels=c('it', 'ib'))
students$home <- factor(c(1, 2, 3, 1, 2), labels=c('h', 'k', 'i'))
women <- subset(students, students$gender=='woman☕')
women
points <- subset(students, students$points > 5)
points
#kolacovy graf
pie(table(students$gender))
pie(table(students$home))
#rozdelenie graf. okna na 2
par(mfrom=c(1, 2))
barplot(table(students$gender))
barplot(table(students$home))
# kreslenie funkcii
plot(cos, from=-2*pi, to=2*pi)
#vykreslit len v bodoch
xx <- seq(from=-2*pi, to=2*pi, length=50)
plot(xx, cos(xx))
#nacitanie dat
dataset <- read.csv('diabetes.csv')
dataset
View(dataset)
x
# nainstalovanie packageov
#install.packages('readxl')
library('readxl')
data <- read_excel('data_cviko.xlsx')
View(data)
View(subset(data, data$vzdelanie == 3))
x <- c(2445, 2450, 2453, 2462, 2463, 2463, 2466, 2471, 2474, 2475, 2475,
2484, 2485, 2486, 2487, 2490, 2491, 2493, 2499, 2501, 2501, 2503,
2504, 2505, 2505, 2506, 2506, 2507, 2509, 2511, 2511, 2513, 2514,
2515, 2518, 2523, 2523, 2524, 2525, 2527, 2529, 2530, 2530, 2533,
2535, 2536, 2537, 2539, 2560, 2571)
alfa <- 0.05
sigma <- 30
n <- 50
binom.test(x, n = n, p = 0.05)
binom.test(30, n = n, p = 0.05)
binom.test(mean(x), n = n, p = 0.05)
binom.test(as.integer(mean(x)), n = n, p = 0.05)
binom.test(x, n = n, sigma = sigma, p = 0.05, conf.level = 0.95)
binom.test(x = 30, n = 50, p = 0.05, conf.level = 0.95)
IS <- mean(x) + c(-1, 1) * qnorm(1- alfa / 2) * sigma / sqrt(n)
IS
help(binom.test)
binom.test(x = x, n = 50, p = 0.05, conf.level = 0.95)
t.test(x)$conf.int
help(t.test)
