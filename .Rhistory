X1 <- 1:100
y1 <- sin(x1) + rnorm(100, 0, 0.05)
X1 <- 1:100
y1 <- sin(x1) + rnorm(100, 0, 0.05)
X1 <- 1:100
x1
data <- read.csv('C:\Users\Marek\Desktop\zapocet\Credit.csv')
data <- read.csv('C:\\Users\\Marek\\Desktop\\zapocet\\Credit.csv')
data
data <- read.csv('C:\\Users\\Marek\\Desktop\\zapocet\\Credit.csv')
data
view(data)
### Libraries
library(tidyverse)
library(tidymodels)
library(magrittr)
library(dplyr)
library(ggplot2)
library(ggfortify)
library(caret)
library(MASS)
library(ROCit)
view(data)
#' Credit data nie su tidy formated, lebo musime pouzit funkciu
#' pivot wider na Region alebo podobne funkcie .. avsak bude lepsie, ked si
#' transformujeme data do ciselnych hodnot
#Task 1.1
#' Credit data nie su tidy formated, lebo musime pouzit funkciu
#' pivot wider na Region alebo podobne funkcie .. avsak bude lepsie, ked si
#' transformujeme data do ciselnych hodnot
data$value <- 1
data
pivot_wider(data = data, names_from = Region, values_from = value, values_fill = 0)
data
view(data)
data <- pivot_wider(data = data, names_from = Region, values_from = value, values_fill = 0)
view(data)
view(data)
#' taktiez bude fajn, ked si dame data do ciselnych hodnot
data$Own <- ifelse(data$Own == 'Yes', 1, 0)
view(data)
#' Balance nie je rovnomerne rozdelena, mame prilis vela klientov s nulovym
#' balancom .. Jednou z rieseni by bolo odstranit takych klientov, ale nie
#' vzdy je to vhodne (zalezi od problemu, co riesime)
#' Balance nie je rovnomerne rozdelena, mame prilis vela klientov s nulovym
#' balancom .. Jednou z rieseni by bolo odstranit takych klientov, ale nie
#' vzdy je to vhodne (zalezi od problemu, co riesime) .. na tento problem
#' velmi rychlo prideme pomocou histogramu
#Task 2.1
#' Balance nie je rovnomerne rozdelena, mame prilis vela klientov s nulovym
#' balancom .. Jednou z rieseni by bolo odstranit takych klientov, ale nie
#' vzdy je to vhodne (zalezi od problemu, co riesime) .. na tento problem
#' velmi rychlo prideme pomocou histogramu
hist(data$Balance)
#Task 2.1
#' Balance nie je rovnomerne rozdelena, mame prilis vela klientov s nulovym
#' balancom .. Jednou z rieseni by bolo odstranit takych klientov, ale nie
#' vzdy je to vhodne (zalezi od problemu, co riesime) .. na tento problem
#' velmi rychlo prideme pomocou histogramu
hist(data$Balance, breaks = 50)
#Task 2.1
#' Balance nie je rovnomerne rozdelena, mame prilis vela klientov s nulovym
#' balancom .. Jednou z rieseni by bolo odstranit takych klientov, ale nie
#' vzdy je to vhodne (zalezi od problemu, co riesime) .. na tento problem
#' velmi rychlo prideme pomocou histogramu
hist(data$Balance, breaks = 30)
#Task 2.1
#' Balance nie je rovnomerne rozdelena, mame prilis vela klientov s nulovym
#' balancom .. Jednou z rieseni by bolo odstranit takych klientov, ale nie
#' vzdy je to vhodne (zalezi od problemu, co riesime) .. na tento problem
#' velmi rychlo prideme pomocou histogramu
hist(data$Balance, breaks = 30)
#Task 2.2
#' Chceme vyberat take prediktory, ktore maju vysoku korelaciu s predikovanou
#' hodnotou, teda balance .. taktiez nechceme zahrnut studenta, lebo je
#' tam silno nerovnomerne rozdeleny pomer tried (student, nestudent)
cor(data)
#Task 2.2
#' Chceme vyberat take prediktory, ktore maju vysoku korelaciu s predikovanou
#' hodnotou, teda balance .. taktiez nechceme zahrnut studenta, lebo je
#' tam silno nerovnomerne rozdeleny pomer tried (student, nestudent).
#' Preto vyberame Limit a Rating
view(cor(data))
model_lm <- lm(Balance~Limit + Rating)
model_lm <- lm(Balance~Limit + Rating, data)
summary(model_lm)
#Task 2.2
#' Chceme vyberat take prediktory, ktore maju vysoku korelaciu s predikovanou
#' hodnotou, teda balance .. taktiez nechceme zahrnut studenta, lebo je
#' tam silno nerovnomerne rozdeleny pomer tried (student, nestudent).
#' Preto vyberame Limit a Rating
view(cor(data))
model_lm <- lm(Balance~Limit : Rating, data)
summary(model_lm)
model_lm <- lm(Balance~Limit + Rating, data)
summary(model_lm)
model_lm <- lm(Balance ~ Limit + Rating, data)
summary(model_lm)
#Task 2.3
#' Mozeme sa pozriet na korelacie medzi jednotlivymi prediktormi a pouzit
#' interkacie medzi nimi. To mozeme spravit lenmedzi takymi prediktormi,
#' ktore maju medzi sebou velku korelaciu. V nasom pripade to bude
#' napriklad Limit a Rating.
model_lm_interaction <- lm(Balance ~ Limit : Rating + Age + Student)
#Task 2.3
#' Mozeme sa pozriet na korelacie medzi jednotlivymi prediktormi a pouzit
#' interkacie medzi nimi. To mozeme spravit lenmedzi takymi prediktormi,
#' ktore maju medzi sebou velku korelaciu. V nasom pripade to bude
#' napriklad Limit a Rating.
model_lm_interaction <- lm(Balance ~ Limit : Rating + Age + Student, data)
summary(model_lm_interaction)
#' Vidime, ze tento druhy model a o dost nizsie P hodnoty, vdaka comu vieme
#' povedat, ze je signifikatnejsi (je mensia sanca, ze tento vysledok je
#' nahodny)
pairs(model_lm_interaction)
#' Vidime, ze tento druhy model a o dost nizsie P hodnoty, vdaka comu vieme
#' povedat, ze je signifikatnejsi (je mensia sanca, ze tento vysledok je
#' nahodny)
qqnorm(model_lm_interaction)
#' Vidime, ze tento druhy model a o dost nizsie P hodnoty, vdaka comu vieme
#' povedat, ze je signifikatnejsi (je mensia sanca, ze tento vysledok je
#' nahodny)
autoplot(model_lm_interaction)
summary(model_lm_interaction)
#Task 3.1
model_lm_interaction$coefficients
#Task 3.1
model_lm_interaction$terms
#Task 3.1
model_lm_interaction$residuals
#Task 3.1
model_lm_interaction$effects
#Task 3.1
summary(model_lm_interaction)
model_lm_interaction$coefficients
summary(model_lm)
#Task 3.1
#' Podla summar vidime, ze v nasom interakcnom modeli su vsetky predikaty
#' signifikantne. Pozerame sa na velkost P value (stlpec vpravo) ..
#' Cim mensia hodnota tym viac je model signifikantny. Ak by sme sa chceli
#' pozriet na konkretnu vec z modelu, vieme k nej pristupit pomocou $.
#' Pri klasickom modeli mame prediktor (model_lm), ktory nie je
#' signifikantny, lebo ma p hodnotu vacsiu ako 0.05 a tym je Limit.
summary(model_lm_interaction)
#Task 3.2
#' Negativny impact ma len Age v modeli s interakciami (pozreli sme sa na
#' koeficienty)
model_lm$coefficients
model_lm_interaction$coefficients
#Task 3.3
summary(model_lm)
#Task 3.4
summary(model_lm)
view(data)
#Task 3.4
#' Estimate (coef) nam hovori o tom, o kolko sa nam posunie predikovana hodnota
#' (Balance), ak zvysime dany prediktor o 1. Ak sa pozrieme na model_lm,
#' tak ak v nom zvysime Rating o 1, Balance sa nam zvysi v priemere o 2.2
#' Sustredime sa na tie prediktory, ktore nam viacej hybu s Balance. Avsak
#' treba podotknut, ze prediktory mozu mat rozny range (napr. ked age ma 0-100
#' a Rating/Limit posuvame v tisicoch, tak je pravdepodobne, ze zvysenie
#' veku o 1 bude mat vacsi dopad ako zvysenie inych o 1)
model_lm$coefficients
model_lm_interaction$coefficients
#Task 3.5
RSM_lm <- sum(model_lm$residuals^2)
RSM_lm_inter <- sum(model_lm$residuals^2)
MSE_lm <- mean(model_lm$residuals^2)
MSE_lm_inter <- mean(model_lm$residuals^2)
help(table)
c(RSM_lm, RSM_lm_inter, MSE_lm, MSE_lm_inter)
table(c(RSM_lm, RSM_lm_inter, MSE_lm, MSE_lm_inter))
#Task 3.5
RSM_lm <- sum(model_lm$residuals^2)
RSM_lm_inter <- sum(model_lm_interaction$residuals^2)
MSE_lm <- mean(model_lm$residuals^2)
MSE_lm_inter <- mean(model_lm_interaction$residuals^2)
table(c(RSM_lm, RSM_lm_inter, MSE_lm, MSE_lm_inter))
help(data.frame())
#Task 3.5
models_metrics <- help(data.frame)
help(data.frame)
data.frame(c(RSM_lm, RSM_lm_inter, MSE_lm, MSE_lm_inter))
data.frame(c(RSM_lm, RSM_lm_inter, MSE_lm, MSE_lm_inter), c('c', 'a', 'b', 'a'))
data.frame(RSM_lm, RSM_lm_inter, MSE_lm, MSE_lm_inter)
#'Aby sme lahko zistili (v ramci prvotneho nastrelu), ci studenti zvyknu mat
#'ine mnozstvo Balance ako nie-studenti, mozeme pouzit specialny histogram,
#'ktory je rozdeleny podla tried.
#Task 4.1
#'Aby sme lahko zistili (v ramci prvotneho nastrelu), ci studenti zvyknu mat
#'ine mnozstvo Balance ako nie-studenti, mozeme pouzit specialny histogram,
#'ktory je rozdeleny podla tried.
# Distribution of variable on two classes on one plot
ggplot(data, mapping = aes(balance, fill = student)) +
geom_histogram(alpha=0.6)
ggplot(data, mapping = aes(Balance, fill = student)) +
geom_histogram(alpha=0.6)
#Task 4.1
#'Aby sme lahko zistili (v ramci prvotneho nastrelu), ci studenti zvyknu mat
#'ine mnozstvo Balance ako nie-studenti, mozeme pouzit specialny histogram,
#'ktory je rozdeleny podla tried.
# Distribution of variable on two classes on one plot
ggplot(data, mapping = aes(Balance, fill = Student)) +
geom_histogram(alpha=0.6)
#Task 4.1
#'Aby sme lahko zistili (v ramci prvotneho nastrelu), ci studenti zvyknu mat
#'ine mnozstvo Balance ako nie-studenti, mozeme pouzit specialny histogram,
#'ktory je rozdeleny podla tried. Budeme potrebovat dat stlpec Student ako
#'factor
data$Student <- as.factor(data$Student)
ggplot(data, mapping = aes(Balance, fill = Student)) +
geom_histogram(alpha=0.6)
ggplot(data, mapping = aes(Student, Balance, fill = Student)) +
geom_point(alpha=0.6)
ggplot(data, mapping = aes(Balance, fill = Student)) +
geom_histogram(alpha=0.6)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
'a', 'b', 'c', labels(c('A','VV', 'BB'))
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
'a', 'b', 'c', labels = c('A','VV', 'BB')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c('a', 'b', 'c'), labels = c('A','VV', 'BB')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c('a', 'b', 'c') 'h', labels = c('A','VV', 'BB')
help(data.frame)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c('a', 'b', 'c'), row.names = c('A','VV', 'BB')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
'a', 'b', 'c', row.names = c('A','VV', 'BB')
)
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
'a', 'b', 'c', labels = c('A','VV', 'BB')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
'a', 'b', 'c', row.names = c('A','VV', 'BB')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c('a', 'b', 'c',) row.names = c('A','VV', 'BB')
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c('a', 'b', 'c'), row.names = c('A','VV', 'BB')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c(data[data$Student == 1]$Balance),
row.names = c('S_B_mean')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c(data[data$Student == 1,]$Balance),
row.names = c('S_B_mean')
)
data[data$Student == 1,]$Balance
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
data.frame(
c(mean(data[data$Student == 1,]$Balance)),
row.names = c('S_B_mean')
)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
temp <- data.frame()
temp$S_B_mean <- mean(data[data$Student == 1,]$Balance)
mean(data[data$Student == 1,]$Balance)
temp
temp$S_B_mean <- mean(data[data$Student == 1,]$Balance)
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
temp <- data.frame('c')
temp
temp$S_B_mean <- mean(data[data$Student == 1,]$Balance)
temp
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
temp <- data.frame('Studenti', 'Nestudenti')
temp
#' Z grafov sa zda, ze nie je velky rozdiel medzi triedami v pocte Balance.
#' Vynimkou je pripad ludi, co maju Balance 0, ktorych je ovela viacej ako
#' nestudentov (to implikuje, ze studenti maju aspon nejaku rezervu na ucte,
#' ze su v tomto zodpovednejsi). Aby sme si boli isti, podme sa pozriet na
#' metriky ako priemer a podobne.
temp <- data.frame('Metrics')
temp
temp$S_B_mean <- mean(data[data$Student == 1,]$Balance)
temp
temp$S_B_mean <- mean(data[data$Student == 1,]$Balance)
temp$S_B_min <- min(data[data$Student == 1,]$Balance)
temp$S_B_max <- max(data[data$Student == 1,]$Balance)
temp$S_B_std <- std(data[data$Student == 1,]$Balance)
temp$S_B_mean <- mean(data[data$Student == 1,]$Balance)
temp$S_B_min <- min(data[data$Student == 1,]$Balance)
temp$S_B_max <- max(data[data$Student == 1,]$Balance)
temp$NS_B_mean <- mean(data[data$Student == 0,]$Balance)
temp$NS_B_min <- min(data[data$Student == 0,]$Balance)
temp$NS_B_max <- max(data[data$Student == 0,]$Balance)
temp
j na grafoch, ze studenti maju v priemere
#Task 4.2
model_glm <- glm(Balance~Student, data)
#Task 4.2
model_glm <- glm(Balance~Student, data, family = 'Binomial')
#Task 4.2
model_glm <- glm(Balance~Student, data, family = 'binomial')
#Task 4.2
model_glm <- glm(Student~Balance, data, family = 'binomial')
summary(model_glm)
ty predikatu Balance vidime, ze model je urcite pouzitelny
predict(model_glm, c(3000))
predict(model_glm, data.frame(c(3000)))
#' Z P hodnoty predikatu Balance vidime, ze model je urcite pouzitelny
#' a jeho vysledky nenahodne. Vidime pozitivny vztah medzi Balance a Student,
#' co znamena, ze so zvysujucim sa Balanceom sa zvysuje sanca, ze sa jedna o
#' studenta.
data.frame(3000, row.names = 'asd')
#' Z P hodnoty predikatu Balance vidime, ze model je urcite pouzitelny
#' a jeho vysledky nenahodne. Vidime pozitivny vztah medzi Balance a Student,
#' co znamena, ze so zvysujucim sa Balanceom sa zvysuje sanca, ze sa jedna o
#' studenta.
data.frame(3000, names = 'asd')
#' Z P hodnoty predikatu Balance vidime, ze model je urcite pouzitelny
#' a jeho vysledky nenahodne. Vidime pozitivny vztah medzi Balance a Student,
#' co znamena, ze so zvysujucim sa Balanceom sa zvysuje sanca, ze sa jedna o
#' studenta
data.frame(Student = 1, Balance = 3000)
#' Z P hodnoty predikatu Balance vidime, ze model je urcite pouzitelny
#' a jeho vysledky nenahodne. Vidime pozitivny vztah medzi Balance a Student,
#' co znamena, ze so zvysujucim sa Balanceom sa zvysuje sanca, ze sa jedna o
#' studenta
temp <- data.frame(Student = 1, Balance = 3000)
predict(model_glm, temp)
prediction <- predict(model_glm, temp)
prediction <- predict(model_glm, temp)
prediction
prediction <- predict(model_glm, temp)$probability
prediction <- predict(model_glm, temp, type = 'response')
prediction
prediction
#Task 4.4
predictions <- predict(model_glm, type = 'response')
predictions
#' Klasifikujeme predikcie na zaklade nasho cut off 0.15
predictions <- ifelse(predictions > 0.15, 1, 0)
predictions
confusionMatrix(predictions, data$Student)$table
confusionMatrix(as.factor(predictions), as.factor(data$Student))$table
#Task 5.1
rocit(model_glm)
#Task 5.1
rocit(class = model_glm$y, score = data$Student)
#Task 5.1
rocit(class = model_glm$y, score = as.integer(data$Student))
#Task 5.1
roc <- rocit(class = model_glm$y, score = as.integer(data$Student))
summary(roc)
#Task 5.1
roc <- rocit(class = model_glm$y, score = as.integer(data$Student),step = TRUE)
roc
roc$AUC
roc$TPR
help(rocit)
plot(roc)
#Task 5.1
roc <- rocit(class = model_glm$y, score = as.integer(data$Student))
plot(roc)
roc <- rocit(class = model_glm$y, score = as.integer(data$Student), method = 'bin')
plot(roc, col = c("#00BA37", "#F8766D"))
#Task 5.1
roc <- rocit(class = model_glm$y, score = as.integer(data$Student))
plot(roc)
#Task 5.1
help(rocit)
roc <- rocit(class = model_glm$y, score = as.integer(data$Student), negref = '-')
plot(roc)
roc <- rocit(class = model_glm$y, score = as.integer(data$Student))
plot(roc)
plot(roc, YIndex = T)
plot(roc, YIndex = F)
T
plot(roc, YIndex = T)
model_glm$y
#Task 5.1
roc <- rocit(class = predictions, score = as.integer(data$Student))
plot(roc)
roc$Cutoff
plot(roc)
#Task 5.1
roc <- rocit(class = model_glm$y, score = as.integer(data$Student))
plot(roc)
help(rocit)
#Task 5.1
summary(model_glm)
#Task 5.1
predictions
roc <- rocit(class = predict(model_glm, type = 'response'), score = as.integer(data$Student))
roc <- rocit(class = model_glm$y, score = predict(model_glm, type = 'response'))
plot(roc)
plot(roc)
#Task 5.3
temp <- data.frame(Student = 1, Balance = 2000)
temp_prediction <- predict(model_glm, temp, type = 'response')
tempprediction
temp_prediction
#Task 5.3
temp <- data.frame(Student = 1, Balance = 2200)
temp_prediction <- predict(model_glm, temp, type = 'response')
temp_prediction
#Task 5.3
temp <- data.frame(Student = 1, Balance = 2300)
temp_prediction <- predict(model_glm, temp, type = 'response')
temp_prediction
#Task 5.3
temp <- data.frame(Student = 1, Balance = 2250)
temp_prediction <- predict(model_glm, temp, type = 'response')
temp_prediction
#Task 5.3
temp <- data.frame(Student = c(1, 1), Balance = c(2250, 1000))
temp_prediction <- predict(model_glm, temp, type = 'response')
temp_prediction
#Task 5.3
temp <- data.frame(Student = c(1, 1), Balance = c(2250, 950))
temp_prediction <- predict(model_glm, temp, type = 'response')
temp_prediction
#Task 5.2
temp <- data.frame(Student = c(1, 1), Balance = c(2250, 950))
temp_prediction <- predict(model_glm, temp, type = 'response')
temp_prediction
#Task 5.3
pred_15 <- ifelse(predictions > 0.15, 1, 0)
#Task 5.3
pred_15 <- ifelse(predictions > 0.15, 1, 0)
pred_64 <- ifelse(predictions > 0.64, 1, 0)
roc <- rocit(class = model_glm$y, score = pred15)
roc <- rocit(class = model_glm$y, score = pred_15)
roc <- rocit(class = model_glm$y, score = pred_15)
roc <- rocit(class = model_glm$y, score = pred_64)
roc1 <- rocit(class = model_glm$y, score = pred_15)
roc2 <- rocit(class = model_glm$y, score = pred_64)
#' porovname area under value, vyssia je lepsia
